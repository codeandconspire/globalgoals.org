/* @define Text */

@import "../base";

.Text {
  color: var(--color-text);
  font-family: var(--font-family-body);
  line-height: 1.5;
  font-size: 16px;
  max-width: 39em;
}

.Text::after {
  clear: both;
}

@media print {
  .Text,
  .Text--adaptive {
    color: black !important;
  }
}

.Text--wide {
  max-width: 39em;
}

.Text--full {
  max-width: none;
}

.Text-contain {
  max-width: 39em;
}

.Text--bold {
  font-weight: bold;
}

.Text--compact * {
  margin: 0 !important;
}

.Text--growing {
}

.Text--growingLate {
}

.Text--center {
  margin: 0 auto;
  text-align: center;
}

.Text--growingTitles {
}

.Text--adaptive {
  color: inherit;
}

.Text > :first-child:not(.Text-embed) {
  margin-top: 0 !important;
}

.Text > :last-child:not(.Text-embed) {
  margin-bottom: 0 !important;
}

.Text-marginTopNone {
  margin-top: 0 !important;
}

.Text-marginBottomNone {
  margin-bottom: 0 !important;
}

.Text-lastMarginNone > :last-child {
  margin-bottom: 0 !important;
}

.Text-firstMarginNone > :first-child {
  margin-top: 0 !important;
}

.Text-muted,
.Text--muted {
  color: var(--color-text-light);
}

.Text-muted:matchs(h1, h2, h3, h4, h5, h6),
.Text--muted :matchs(h1, h2, h3, h4, h5, h6) {
  color: var(--color-text-light-large);
}

.Text-decorative {
  color: #ddd;
}

/**
 * Misc inline elements
 */

.Text:not(.Text--adaptive) a:not([class]) {
  margin: -5px;
  padding: 5px;
  max-width: 100%;
  font-weight: 600;
  color: var(--color-link);
  transition: color 50ms var(--ease-out);
}

.Text:not(.Text--adaptive) a:hover {
  color: var(--color-link-enter);
}

.Text--adaptive a {
  text-decoration: underline;
}

.Text--adaptive a:hover {
  background: var(--color-hover-dark);
}

.Text--adaptive .Text-largeLink {
  display: inline-block;
  text-decoration: none;
  height: 2.6em;
  padding: 0 0.8em;
  margin: 0 -0.8em;
  line-height: 2.5em;
  -webkit-touch-callout: none;
  border-radius: 1px;
  transition: background-color 140ms var(--ease-out);
}

.Text--adaptive a:hover {
  background: var(--color-hover-dark);
}

.Text--adaptive .Text-largeLink {
  margin-right: 14px;
}

.Text-icon {
  vertical-align: middle;
  margin-right: 0.7em;
  position: relative;
  top: -0.08em;
}

/**
 * Misc block elements
 * 1. Prismic wrapps images in paragraphs with this class
 */

.Text :matches(p, ul, ol) {
  margin: 1.3em 0;
}

.Text :matches(img, pre, .Text-embed, [data-oembed]) {
  margin: 1.5em 0;
}

.Text img,
.Text-image {
  width: 100%;
  height: auto;
  background: var(--color-gray-light);
}

img.Text-image--left {
  max-width: 100%;
  width: auto;
  float: left;
  margin: 0 16px 16px 0;
}

img.Text-image--right {
  max-width: 100%;
  width: auto;
  float: right;
  margin: 0 0 16px 16px;
}

.Text .block-img {
  margin: 0; /* 1 */
}

.Text > :first-child img {
  margin-top: 0 !important;
}

.Text > :last-child img {
  margin-bottom: 0 !important;
}

.Text ul,
.Text-list .Text-list--unordered {
  list-style-type: none;
}

.Text ol,
.Text-list .Text-list--ordered {
  list-style-type: decimal;
  padding-left: 22px;
}

.Text ul li,
.Text-list--unordered li {
  padding-left: 23px;
  position: relative;
}

.Text ol li,
.Text-list--ordered li {
  padding-left: 8px;
}

.Text ul li::before,
.Text-list--unordered li::before {
  content: "â€“";
  position: absolute;
  left: 0;
}

.Text li + li,
.Text-list li + li {
  padding-top: 16px;
}

.Text-list.Text-list--bare {
  padding: 0;
  list-style: none;
}

.Text dt {
  font-weight: bold;
}

@supports (display: grid) {
  .Text dl {
    display: grid;
    grid-template-columns: auto 1fr;
  }

  .Text dt {
    display: inline;
    margin-right: 1ch;
  }

  .Text dd {
    display: inline;
    margin: 0;
  }
}

.Text pre {
  font-size: 12px;
  overflow: auto;
  background: var(--color-gray-light);
  padding: 1em;
  text-align: left;
}

/**
 * Link list
 */

ul.Text--links li {
  padding: 0 0 8px 0;
}

ul.Text--links li::before {
  content: none;
}

.Text ul.Text--links a {
  padding: 0;
  margin: 0;
  display: inline-block;
}

ul.Text--links a::after {
  content: attr(href);
  display: block;
  overflow: hidden;
  max-width: 100%;
  color: var(--color-text-light);
  font-size: 14px;
  font-weight: normal;
  white-space: nowrap;
  text-overflow: ellipsis;
  transition: color 50ms var(--ease-out);
}

.Text ul.Text--links a:hover::after {
  color: var(--color-text);
}

.Text-embed {
  margin: 32px 0;
  padding: 16px;
  background: var(--color-gray-light);
  border-radius: 1px;
}

.Text-embed::before {
  content: "";
  display: block;
  display: inline-block;
  vertical-align: middle;
  margin-right: 16px;
  border: solid #1a1a1a;
  border-width: 20px 0 20px 30px;
  border-color: transparent black transparent black;
  margin: 10px 30px 12px 12px;
}

.Text-marque {
  display: inline-block;
  padding: 0.12em 0.325em 0.055em;
  background-color: var(--color-text);
  color: #fff;
}

.Text-marque--red {
  background-color: var(--color-red)
}

.Text-marque--blue {
  background-color: var(--color-blue)
}

.Text-marque--yellow {
  background-color: var(--color-yellow)
}

.Text-appear {
  animation: Text-appear--appearing 250ms cubic-bezier(0.19, 1, 0.22, 1) forwards;
}

@keyframes Text-appear--appearing {
  from {
    opacity: 0;
    transform: translateY(50%);
  }

  to {
    opacity: 1;
    transform: translateY(0%);
  }
}

/**
 * Assume a ratio of 16:9 on all video sources
 */

.Text-embed--youtube::before,
.Text-embed--vimeo::before {
  content: none;
}

.Text-embed--youtube,
.Text-embed--vimeo {
  width: 100%;
  height: 0;
  padding: calc(720 / 1280 * 100%) 0 0 0;
  position: relative;
}

.Text-embed--youtube iframe,
.Text-embed--vimeo iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/**
 * Headings
 */

.Text :matches(h1, h2, h3, h4, h5, h6,
  .Text-h1, .Text-h2, .Text-h3, .Text-h4, .Text-h5, .Text-h6) {
  margin: 0;
}

.Text :matches(h1, h2, h3, h4, .Text-h1, .Text-h2, .Text-h3, .Text-h4) {
  font-family: var(--font-family-heading);
  letter-spacing: -0.02em;
  font-weight: bold;
  line-height: 1.1;
  margin: 53px 0 -8px;
}

.Text :matches(h1, .Text-h1) {
  font-size: 57px;
  line-height: 0.95;
}

.Text :matches(h2, .Text-h2) {
  font-size: 48px;
  line-height: 1;
}

.Text :matches(h3, .Text-h3) {
  font-size: 32px;
  line-height: 1.05;
}

.Text :matches(h4, .Text-h4) {
  font-size: 24px;
  line-height: 1.15;
  margin-bottom: -10px;
}

.Text .Text-h4--alt {
  font-size: 32px;
  line-height: 1.05;
}

.Text :matches(h5, h6) {
  font-weight: bold;
  font-size: inherit;
  line-height: inherit;
  margin: 1.3em 0;
}

.Text :matches(h1, h2, h3, h4, .Text-h1, .Text-h2, .Text-h3, .Text-h4) a {
  background: var(--color-link);
  color: #fff;
  white-space: nowrap;
  padding: 0.15em 0.18em 0.08em;
  margin: 0;
  font-weight: normal;
  transition: background-color 140ms var(--ease-out);
}

:root[data-focus-source="key"] .Text :matches(h1, h2, h3, h4, .Text-h1, .Text-h2, .Text-h3, .Text-h4) a:focus {
  outline: 3px solid black;
  outline-offset: -1px;
}

.Text :matches(h1, h2, h3, h4, .Text-h1, .Text-h2, .Text-h3, .Text-h4) a:hover {
  background: var(--color-link-enter);
  color: #fff;
}

/**
 * Guard for bold text in heading
 */

.Text :matches(h1, h2, h3, h4, .Text-h1, .Text-h2, .Text-h3, .Text-h4) strong {
  font-weight: inherit !important;
}

/**
 * Custom visual elements
 */

.Text-large {
  font-size: 19px;
}

.Text-label {
  font-size: 24px;
  color: var(--color-gray);
  font-family: var(--font-family-heading);
  font-weight: bold;
  line-height: 1.1;
  text-transform: uppercase;
  word-spacing: var(--word-spacing-heading);
}

.Text-small,
.Text small {
  font-size: 14px;
  line-height: inherit;
}

/**
 * Wider viewports
 */

@media (--viewport-lg) {
  .Text-large {
    font-size: 24px;
  }

  .Text :matches(h1, h2, h3, h4, .Text-h1, .Text-h2, .Text-h3, .Text-h4) {
    margin-top: 72px;
  }

  .Text :matches(h1, .Text-h1) {
    font-size: 96px;
  }

  .Text :matches(h2, .Text-h2) {
    font-size: 72px;
  }

  .Text :matches(h3, .Text-h3) {
    font-size: 48px;
  }

  .Text :matches(h4, .Text-h4) {
    font-size: 32px;
    line-height: 1.05;
  }

  /**
   * Growing text and titles
   * - Base text bumps up
   * - h2 becomes h1, etc.
   */

  .Text--growing {
    font-size: 19px;
  }

  .Text--growing .Text-large {
    font-size: 24px;
  }

  .Text--growingTitles :matches(h2, .Text-h2) {
    font-size: 96px;
  }

  .Text--growingTitles :matches(h3, .Text-h3) {
    font-size: 72px;
  }

  .Text--growingTitles :matches(h4, .Text-h4) {
    font-size: 48px;
  }
}

@media (--viewport-xl) {
  .Text--growingLate {
    font-size: 19px;
  }

  .Text--growingLate .Text-large {
    font-size: 24px;
  }
}
